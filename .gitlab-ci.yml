image: python:3.8-slim

variables:
  GIT_STRATEGY: clone

stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy

build-frontend:
  # Official docker image.
  stage: build
  image: 
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [""]
  script:
    - cp $DOCKER_CONFIG /kaniko/config.json
    - export DOCKER_CONFIG=/kaniko
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/ssa-frontend"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --cache=true
      --destination "$CI_REGISTRY_IMAGE:frontend"
  only:
    - main

build-backend:
  # Official docker image.
  stage: build
  image: 
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [""]
  script:
    - cp $DOCKER_CONFIG /kaniko/config.json
    - export DOCKER_CONFIG=/kaniko
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/ssa-backend"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --cache=true
      --destination "$CI_REGISTRY_IMAGE:backend"
  only:
    - main


deploy-job:      # This job runs in the deploy stage.
  image: alpine:latest
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  when: on_success
  before_script:
    - chmod og= $SSH_PRIVATE_KEY
    - apk update && apk add openssh-client python
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $VM_USER@$VM "docker compose -f ~/$CI_PROJECT_DIR/docker-compose.yml down || true"
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $VM_USER@$VM "docker rm -f $(docker ps -a -q) || true"
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $VM_USER@$VM "docker volume rm $(docker volume ls -q) || true"
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $VM_USER@$VM "rm -rf ~/$CI_PROJECT_DIR || true"
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $VM_USER@$VM "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $VM_USER@$VM "docker pull ${CI_REGISTRY_IMAGE}:latest"
  script: 
      - scp -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY -r . $VM_USER@$VM:~/$CI_PROJECT_DIR
      - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $VM_USER@$VM "sed -i '5s|teamproject|$CI_IMG|â€™ ~/$CI_PROJECT_DIR/docker-compose.yml" 
      - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $VM_USER@$VM "docker compose -f ~/$CI_PROJECT_DIR/docker-compose.yml up -d"
  environment:
    name: production
  only:
    - main
